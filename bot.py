import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from telegram.constants import ParseMode

# Logging ayarlarƒ±
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# Bot token'ƒ±
BOT_TOKEN = "7870032876:AAHwvao_2fzRSGNPagXqpK9yaA3rDTJKGu0"

# Web App URL'si (GitHub Pages i√ßin)
WEBAPP_URL = "https://atagylyjow.github.io/mini-games-tm/"

# Kullanƒ±cƒ± dil tercihlerini saklamak i√ßin
user_languages = {}

# Bot mesajlarƒ± - √ßoklu dil desteƒüi
bot_messages = {
    'tk': {
        'welcome': """
üéÆ *Mini Games TM*'e Ho≈ü Geldi≈àiz!

Salam {name}! üéâ

Bu bot arkaly gyzykly mini o√Ωunlary o√Ωnap, dostlary≈àyz bilen √Ωary≈üyp bilersi≈àiz.

*M√∂√Ωjer O√Ωunlar:*
üêç √ùylan - Klassik √Ωylan o√Ωuny
üß© Tetris - Blok d√ºz√º≈ü o√Ωuny  
üß† √ùat - Kart gabatla≈üdyrma o√Ωuny
‚≠ï XOX - Klassik XOX o√Ωuny

*A√Ωratynlyklar:*
üèÜ Global hasapla re√Ωtingi
üåç K√∂p dilli goldaw
üì± Mobil u√Ωgun diza√Ωn
üéØ Hakyky wagtynda o√Ωun

A≈üakdaky d√ºwm√§ basyp o√Ωunlary ba≈ülady≈à!
        """,
        'help': """
üéÆ *Mini Games TM - K√∂mek*

*Bu√Ωruklar:*
/start - Boty ba≈ülat we o√Ωunlary a√ß
/help - Bu k√∂mek habaryny g√∂rkez
/leaderboard - I≈à √Ωokary hasaplalary g√∂rkez
/about - Bot hakda maglumat

*O√Ωun Dolandyry≈üy:*
‚Ä¢ √ùylan: Ok d√ºwmeleri arkaly √Ω√∂neltme
‚Ä¢ Tetris: Ok d√ºwmeleri + Space (√∂w√ºrme)
‚Ä¢ √ùat: Kartlara basma
‚Ä¢ XOX: Sƒ±rasy bilen X we O go√Ωma

*A√Ωratynlyklar:*
‚Ä¢ K√∂p dilli goldaw (TM/RU/TR)
‚Ä¢ Global hasapla re√Ωtingi
‚Ä¢ Mobil u√Ωgun diza√Ωn
‚Ä¢ Telegram tema goldawy

Islegi≈àiz bar bolsa /start bu√Ωrugyny ulanyp o√Ωunlary ba≈üladyp bilersi≈àiz!
        """,
        'leaderboard': """
üèÜ *Global Hasapla Re√Ωtingi*

*I≈à √ùokary Hasaplalar:*

ü•á **√ùylan:** I≈à √Ωokary hasapla
ü•à **Tetris:** I≈à √Ωokary hasapla  
ü•â **√ùat:** I≈à √Ωokary hasapla
4Ô∏è‚É£ **XOX:** I≈à √Ωokary hasapla

*Hasapla N√§dip Alnyar:*
‚Ä¢ √ùylan: Her i√Ωmit +10 hasapla
‚Ä¢ Tetris: Her setir +100 hasapla
‚Ä¢ √ùat: Her gabatla≈üma +100 hasapla
‚Ä¢ XOX: √ùe≈àiji +100 hasapla

√ñz hasapla≈àyzy etmek √º√ßin /start bu√Ωrugyny ulany≈à!
        """,
        'about': """
üéÆ *Mini Games TM - Hakda*

*√ñnd√ºrijisi:* Mini Games TM Topary
*Wersi√Ωa:* 1.0.0
*Dil:* Python + JavaScript
*Platforma:* Telegram Web App

*Tehnologi√Ωalar:*
‚Ä¢ HTML5 Canvas
‚Ä¢ CSS3 Animasi√Ωalar
‚Ä¢ JavaScript ES6+
‚Ä¢ Python Telegram Bot API

*A√Ωratynlyklar:*
‚úÖ 4 d√ºrli mini o√Ωun
‚úÖ K√∂p dilli goldaw
‚úÖ Global hasapla ulgamy
‚úÖ Responsive diza√Ωn
‚úÖ Telegram integratsi√Ωasy
‚úÖ Mobil u√Ωgun

*Lisenzi√Ωa:* MIT License
*GitHub:* https://github.com/Atagylyjow/mini-games-tm

Bu bot a√ßyk √ße≈üme kody we jemgy√Ωet√ßilik go≈üantlaryna a√ßyk!
        """,
        'language_select': "üåç *Dil sa√Ωla≈à:*",
        'language_changed': "‚úÖ Dil √º√Ωtgedildi: T√ºrkmen",
        'play_games': "üéÆ O√Ωunlary Ba≈ülat",
        'change_language': "üåç Dil √ú√Ωtget",
        'back_to_menu': "‚¨ÖÔ∏è Yza"
    },
    'ru': {
        'welcome': """
üéÆ *Mini Games TM* - –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!

–ü—Ä–∏–≤–µ—Ç {name}! üéâ

–° —ç—Ç–∏–º –±–æ—Ç–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ –≤–µ—Å–µ–ª—ã–µ –º–∏–Ω–∏-–∏–≥—Ä—ã –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏.

*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã:*
üêç –ó–º–µ–π–∫–∞ - –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ –∑–º–µ–π–∫–∞
üß© –¢–µ—Ç—Ä–∏—Å - –ò–≥—Ä–∞ —Å –±–ª–æ–∫–∞–º–∏  
üß† –ü–∞–º—è—Ç—å - –ò–≥—Ä–∞ –Ω–∞ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–∞—Ä—Ç
‚≠ï –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏ - –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ XOX

*–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:*
üèÜ –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –æ—á–∫–æ–≤
üåç –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
üì± –ú–æ–±–∏–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω
üéØ –ò–≥—Ä–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—ã!
        """,
        'help': """
üéÆ *Mini Games TM - –ü–æ–º–æ—â—å*

*–ö–æ–º–∞–Ω–¥—ã:*
/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—ã
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏
/leaderboard - –ü–æ–∫–∞–∑–∞—Ç—å –ª—É—á—à–∏–µ —Å—á–µ—Ç–∞
/about - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ

*–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–∞–º–∏:*
‚Ä¢ –ó–º–µ–π–∫–∞: –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ–ª–∫–∞–º–∏
‚Ä¢ –¢–µ—Ç—Ä–∏—Å: –°—Ç—Ä–µ–ª–∫–∏ + Space (–ø–æ–≤–æ—Ä–æ—Ç)
‚Ä¢ –ü–∞–º—è—Ç—å: –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–∞—Ä—Ç—ã
‚Ä¢ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏: –ü–æ–æ—á–µ—Ä–µ–¥–Ω–æ X –∏ O

*–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:*
‚Ä¢ –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (TM/RU/TR)
‚Ä¢ –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –æ—á–∫–æ–≤
‚Ä¢ –ú–æ–±–∏–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–º Telegram

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä!
        """,
        'leaderboard': """
üèÜ *–ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –æ—á–∫–æ–≤*

*–õ—É—á—à–∏–µ —Å—á–µ—Ç–∞:*

ü•á **–ó–º–µ–π–∫–∞:** –õ—É—á—à–∏–π —Å—á–µ—Ç
ü•à **–¢–µ—Ç—Ä–∏—Å:** –õ—É—á—à–∏–π —Å—á–µ—Ç  
ü•â **–ü–∞–º—è—Ç—å:** –õ—É—á—à–∏–π —Å—á–µ—Ç
4Ô∏è‚É£ **–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏:** –õ—É—á—à–∏–π —Å—á–µ—Ç

*–ö–∞–∫ –Ω–∞–±—Ä–∞—Ç—å –æ—á–∫–∏:*
‚Ä¢ –ó–º–µ–π–∫–∞: –ö–∞–∂–¥–∞—è –µ–¥–∞ +10 –æ—á–∫–æ–≤
‚Ä¢ –¢–µ—Ç—Ä–∏—Å: –ö–∞–∂–¥–∞—è –ª–∏–Ω–∏—è +100 –æ—á–∫–æ–≤
‚Ä¢ –ü–∞–º—è—Ç—å: –ö–∞–∂–¥–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ +100 –æ—á–∫–æ–≤
‚Ä¢ –ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏: –ü–æ–±–µ–¥–∏—Ç–µ–ª—å +100 –æ—á–∫–æ–≤

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞–±—Ä–∞—Ç—å —Å–≤–æ–∏ –æ—á–∫–∏!
        """,
        'about': """
üéÆ *Mini Games TM - –û –±–æ—Ç–µ*

*–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:* –ö–æ–º–∞–Ω–¥–∞ Mini Games TM
*–í–µ—Ä—Å–∏—è:* 1.0.0
*–Ø–∑—ã–∫:* Python + JavaScript
*–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:* Telegram Web App

*–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:*
‚Ä¢ HTML5 Canvas
‚Ä¢ CSS3 –ê–Ω–∏–º–∞—Ü–∏–∏
‚Ä¢ JavaScript ES6+
‚Ä¢ Python Telegram Bot API

*–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:*
‚úÖ 4 —Ä–∞–∑–Ω—ã–µ –º–∏–Ω–∏-–∏–≥—Ä—ã
‚úÖ –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ—á–∫–æ–≤
‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω
‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram
‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å

*–õ–∏—Ü–µ–Ω–∑–∏—è:* MIT License
*GitHub:* https://github.com/Atagylyjow/mini-games-tm

–≠—Ç–æ—Ç –±–æ—Ç —Å –æ—Ç–∫—Ä—ã—Ç—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º –∏ –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤–∫–ª–∞–¥–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!
        """,
        'language_select': "üåç *–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:*",
        'language_changed': "‚úÖ –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω: –†—É—Å—Å–∫–∏–π",
        'play_games': "üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—ã",
        'change_language': "üåç –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
        'back_to_menu': "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    },
    'tr': {
        'welcome': """
üéÆ *Mini Games TM*'ye Ho≈ü Geldiniz!

Merhaba {name}! üéâ

Bu bot ile eƒülenceli mini oyunlarƒ± oynayabilir, arkada≈ülarƒ±nƒ±zla yarƒ±≈üabilirsiniz.

*Mevcut Oyunlar:*
üêç Snake - Klasik yƒ±lan oyunu
üß© Tetris - Blok d√ºzenleme oyunu  
üß† Memory Game - Kart e≈üle≈ütirme oyunu
‚≠ï Tic Tac Toe - Klasik XOX oyunu

*√ñzellikler:*
üèÜ Global skor sƒ±ralamasƒ±
üåç √áoklu dil desteƒüi
üì± Mobil uyumlu tasarƒ±m
üéØ Ger√ßek zamanlƒ± oyun

A≈üaƒüƒ±daki butona tƒ±klayarak oyunlarƒ± ba≈ülatƒ±n!
        """,
        'help': """
üéÆ *Mini Games TM - Yardƒ±m*

*Komutlar:*
/start - Botu ba≈ülat ve oyunlarƒ± a√ß
/help - Bu yardƒ±m mesajƒ±nƒ± g√∂ster
/leaderboard - En y√ºksek skorlarƒ± g√∂ster
/about - Bot hakkƒ±nda bilgi

*Oyun Kontrolleri:*
‚Ä¢ Snake: Ok tu≈ülarƒ± ile y√∂nlendirme
‚Ä¢ Tetris: Ok tu≈ülarƒ± + Space (d√∂nd√ºrme)
‚Ä¢ Memory: Kartlara tƒ±klama
‚Ä¢ Tic Tac Toe: Sƒ±rayla X ve O koyma

*√ñzellikler:*
‚Ä¢ √áoklu dil desteƒüi (TM/RU/TR)
‚Ä¢ Global skor sƒ±ralamasƒ±
‚Ä¢ Mobil uyumlu tasarƒ±m
‚Ä¢ Telegram tema desteƒüi

Herhangi bir sorunuz varsa /start komutunu kullanarak oyunlarƒ± ba≈ülatabilirsiniz!
        """,
        'leaderboard': """
üèÜ *Global Skor Sƒ±ralamasƒ±*

*En Y√ºksek Skorlar:*

ü•á **Snake:** En y√ºksek skor
ü•à **Tetris:** En y√ºksek skor  
ü•â **Memory:** En y√ºksek skor
4Ô∏è‚É£ **Tic Tac Toe:** En y√ºksek skor

*Nasƒ±l Skor Yapƒ±lƒ±r:*
‚Ä¢ Snake: Her yem +10 puan
‚Ä¢ Tetris: Her satƒ±r +100 puan
‚Ä¢ Memory: Her e≈üle≈üme +100 puan
‚Ä¢ Tic Tac Toe: Kazanan +100 puan

Kendi skorunuzu yapmak i√ßin /start komutunu kullanƒ±n!
        """,
        'about': """
üéÆ *Mini Games TM - Hakkƒ±nda*

*Geli≈ütirici:* Mini Games TM Team
*Versiyon:* 1.0.0
*Dil:* Python + JavaScript
*Platform:* Telegram Web App

*Teknolojiler:*
‚Ä¢ HTML5 Canvas
‚Ä¢ CSS3 Animations
‚Ä¢ JavaScript ES6+
‚Ä¢ Python Telegram Bot API

*√ñzellikler:*
‚úÖ 4 farklƒ± mini oyun
‚úÖ √áoklu dil desteƒüi
‚úÖ Global skor sistemi
‚úÖ Responsive tasarƒ±m
‚úÖ Telegram entegrasyonu
‚úÖ Mobil uyumlu

*Lisans:* MIT License
*GitHub:* https://github.com/Atagylyjow/mini-games-tm

Bu bot a√ßƒ±k kaynak kodludur ve topluluk katkƒ±larƒ±na a√ßƒ±ktƒ±r!
        """,
        'language_select': "üåç *Dil se√ßin:*",
        'language_changed': "‚úÖ Dil deƒüi≈ütirildi: T√ºrk√ße",
        'play_games': "üéÆ Oyunlarƒ± Ba≈ülat",
        'change_language': "üåç Dil Deƒüi≈ütir",
        'back_to_menu': "‚¨ÖÔ∏è Geri"
    }
}

def get_user_language(user_id):
    """Kullanƒ±cƒ±nƒ±n dil tercihini al"""
    return user_languages.get(user_id, 'tk')  # Varsayƒ±lan: T√ºrkmen

def get_message(user_id, message_key):
    """Kullanƒ±cƒ±nƒ±n diline g√∂re mesaj al"""
    lang = get_user_language(user_id)
    return bot_messages[lang][message_key]

def get_main_menu_keyboard(user_id):
    """Ana men√º klavyesi"""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(get_message(user_id, 'play_games'), web_app=WebAppInfo(url=WEBAPP_URL))],
        [InlineKeyboardButton(get_message(user_id, 'change_language'), callback_data="change_lang")]
    ])

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Bot ba≈ülatma komutu"""
    if not update.effective_user:
        return
    
    user = update.effective_user
    user_id = user.id
    
    # Kar≈üƒ±lama mesajƒ±
    welcome_text = get_message(user_id, 'welcome').format(
        name=user.first_name or 'Oyuncu'
    )
    
    # Ana men√º klavyesi
    reply_markup = get_main_menu_keyboard(user_id)
    
    if update.message:
        await update.message.reply_text(
            welcome_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Yardƒ±m komutu"""
    if not update.effective_user:
        return
    
    user_id = update.effective_user.id
    help_text = get_message(user_id, 'help')
    
    # Ana men√ºye geri d√∂n butonu
    keyboard = [
        [InlineKeyboardButton(get_message(user_id, 'back_to_menu'), callback_data="back_to_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    if update.message:
        await update.message.reply_text(
            help_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )

async def leaderboard_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Skor sƒ±ralamasƒ± komutu"""
    if not update.effective_user:
        return
    
    user_id = update.effective_user.id
    leaderboard_text = get_message(user_id, 'leaderboard')
    
    # Ana men√ºye geri d√∂n butonu
    keyboard = [
        [InlineKeyboardButton(get_message(user_id, 'back_to_menu'), callback_data="back_to_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    if update.message:
        await update.message.reply_text(
            leaderboard_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )

async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Bot hakkƒ±nda bilgi"""
    if not update.effective_user:
        return
    
    user_id = update.effective_user.id
    about_text = get_message(user_id, 'about')
    
    # Ana men√ºye geri d√∂n butonu
    keyboard = [
        [InlineKeyboardButton(get_message(user_id, 'back_to_menu'), callback_data="back_to_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    if update.message:
        await update.message.reply_text(
            about_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Buton callback'leri"""
    if not update.callback_query or not update.effective_user:
        return
        
    query = update.callback_query
    user_id = update.effective_user.id
    
    await query.answer()
    
    if query.data == "play_games":
        await query.edit_message_text(
            "üéÆ Oyunlar a√ßƒ±lƒ±yor...\n\nWeb App y√ºkleniyor, l√ºtfen bekleyin...",
            parse_mode=ParseMode.MARKDOWN
        )
    elif query.data == "change_lang":
        # Dil se√ßme men√ºs√º
        language_text = get_message(user_id, 'language_select')
        keyboard = [
            [
                InlineKeyboardButton("üáπüá≤ T√ºrkmen", callback_data="lang_tk"),
                InlineKeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang_ru")
            ],
            [
                InlineKeyboardButton("üáπüá∑ T√ºrk√ße", callback_data="lang_tr")
            ],
            [
                InlineKeyboardButton(get_message(user_id, 'back_to_menu'), callback_data="back_to_menu")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            language_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )
    elif query.data == "back_to_menu":
        # Ana men√ºye geri d√∂n
        welcome_text = get_message(user_id, 'welcome').format(
            name=update.effective_user.first_name or 'Oyuncu'
        )
        reply_markup = get_main_menu_keyboard(user_id)
        
        await query.edit_message_text(
            welcome_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )
    elif query.data and query.data.startswith("lang_"):
        # Dil deƒüi≈ütirme
        lang = query.data.split("_")[1]
        user_languages[user_id] = lang
        
        # Dil deƒüi≈ütirildi mesajƒ± ve ana men√ºye geri d√∂n
        welcome_text = get_message(user_id, 'welcome').format(
            name=update.effective_user.first_name or 'Oyuncu'
        )
        reply_markup = get_main_menu_keyboard(user_id)
        
        await query.edit_message_text(
            welcome_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
        )

def main() -> None:
    """Bot'u ba≈ülat"""
    # Bot uygulamasƒ±nƒ± olu≈ütur
    application = Application.builder().token(BOT_TOKEN).build()
    
    # Komut handler'larƒ±
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("leaderboard", leaderboard_command))
    application.add_handler(CommandHandler("about", about_command))
    
    # Callback query handler
    application.add_handler(CallbackQueryHandler(button_callback))
    
    # Bot'u ba≈ülat
    print("ü§ñ Mini Games TM Bot ba≈ülatƒ±lƒ±yor...")
    print(f"üåê Web App URL: {WEBAPP_URL}")
    print("‚úÖ Bot hazƒ±r! /start komutunu kullanƒ±n.")
    print("üåç Desteklenen diller: T√ºrkmen, Rus, T√ºrk")
    print("üéÆ Ana men√ºde dil deƒüi≈ütirme butonu mevcut!")
    
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main() 